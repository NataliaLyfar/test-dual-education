{"version":3,"file":"static/js/997.4c328a03.chunk.js","mappings":"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","sources":["helpers/colorTypes.js","components/PokemonCard.jsx","components/PokemonGallery.jsx","api/api.js","constants/constantsApi.js","api/getPokemonData.js","api/getPokemons.js","pages/index.jsx"],"sourcesContent":["export const colorTypes = {\n    bug: '#997300',\n    dragon: '#004d1a',\n    fairy: '#ffcce6',\n    fire: '#ffaa80',\n    ghost: '#b3b3b3',\n    ground: '#331100',\n    normal: '#ffd966',\n    pyschic: '#f25ab2',\n    steel: '#d9d9d9',\n    dark: '#333333',\n    electric: '#0000ff',\n    fighting: '#ff4d4d',\n    flying: '#cce6ff',\n    grass: '#00994d',\n    ice: '#99c2ff',\n    poison: '#d98cb3',\n    rock: '#cca300',\n    water: '#1a75ff'\n}","import styled from 'styled-components';\nimport { colorTypes } from 'helpers/colorTypes';\n\n\nconst CardWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border-radius: ${p => p.theme.radii.normal};\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  padding: ${p => p.theme.space[3]}px;\n  background-color: ${({type})=>colorTypes[type]};\n  &:hover {\n    cursor: pointer;\n    box-shadow: 0px 0px 8px 6px ${p => p.theme.colors.accent};\n  }\n`;\nconst Avatar = styled.img`\n  width: 170px;\n  height: 150px;\n  border-radius: ${p => p.theme.radii.normal};\n`;\nconst PokemonTitle = styled.h3`\ncolor: ${p => p.theme.colors.white};\nfont-weight: ${p => p.theme.fontWeights.bold};\nfont-size: ${p => p.theme.fontSizes.l};\nmargin-top: ${p => p.theme.space[0]}px;\n`;\nconst PokemonType = styled.p`\ncolor: ${p => p.theme.colors.white};\nfont-weight: ${p => p.theme.fontWeights.semibold};\nfont-size: ${p => p.theme.fontSizes.m};\nmargin-top: ${p => p.theme.space[0]}px;\n`;\n\n\nexport const PokemonCard = ({ id, name, image, type }) => {\n  return (\n    <CardWrapper type={type}>\n      <Avatar src={image} alt={name} />\n        <PokemonTitle>{name}</PokemonTitle>\n        <PokemonType type={type}>Type: {type}</PokemonType>\n    </CardWrapper>\n  );\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n// import PropTypes from 'prop-types';\nimport { PokemonCard } from './PokemonCard';\n\nconst PokemonList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 32px);\n  grid-template-columns: repeat(auto-fill, minmax(170px, 1fr));\n  grid-gap: ${p => p.theme.space[5]}px;\n  margin: 0 auto ${p => p.theme.space[4]}px;\n  padding: 0;\n`;\nconst Item = styled.li`\n  padding: 0;\n  border-radius: ${p => p.theme.radii.small};\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 2px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const PokemonGallery = ({ pokemons }) => {\n  const location = useLocation();\n  return (\n    <PokemonList>\n      {pokemons.map((pokemon, index) => (\n        <Item key={index}>\n          <Link to={`/pokemons/${pokemon.id}`} state={{ from: location }}>\n            <PokemonCard\n              id={pokemon.id}\n              name={pokemon.name}\n              image={pokemon.sprites.other.dream_world.front_default}\n              type={pokemon.types[0].type.name}\n            />\n          </Link>\n        </Item>\n      ))}\n    </PokemonList>\n  );\n};\n\n// PokemonGallery.propTypes = {\n//   pokemons: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       name: PropTypes.string.isRequired,\n//       image: PropTypes.string,\n//       type: PropTypes.string,\n//     })\n//   ),\n// };\n","import axios from \"axios\";\nimport { initialURL } from \"constants\";\n\nexport const customAxios = axios.create({\n  baseURL: initialURL,\n});\n\n","export const initialURL = 'https://pokeapi.co/api/v2/pokemon'","import { customAxios } from \"./api\";\nimport { toast } from \"react-toastify\";\n\n \nexport const getPokemonData = async (url) => {\n  try {\n    const {data} = await customAxios.get(url);\n    console.log(data);\n    return data;\n  } catch (error) {\n    toast.error(`Oops, an error occurred! ${error}`);\n  };\n};\n","import { customAxios } from \"./api\";\nimport { toast } from \"react-toastify\";\n\n\nexport const getPokemons = async (limit = 10, offset = 0) => {\n  try {\n    const data = customAxios.get(`?limit=${limit}&offset=${offset}`);\n    return data;\n  } catch (error) {\n    toast.error(`Oops, an error occurred! ${error}`);\n  };\n};\n\n","// import { useEffect, useState } from \"react\";\n// import { toast } from 'react-toastify';\n// import { ThreeDots } from  'react-loader-spinner';\n// import { TiArrowSync } from \"react-icons/ti\";\n// import * as API from 'api';\n// import { dataMovie } from \"utils/dataMovie\";\n// import { MoviesGallery } from \"components/MoviesGallery\";\n// import { Container } from \"components/ui/Container\";\n// import { Section } from \"components/ui/Section\";\n// import { Button } from \"components/ui/buttons\";\n// import { Slider } from \"components/Swiper\";\n// import { Title } from \"components/ui/Title\";\n\n// export function getPokemon({ url }) {\n//   return new Promise((resolve, reject) => {\n//       fetch(url).then(res => res.json())\n//           .then(data => {\n//               resolve(data)\n//           })\n//   });\n// }\n\n// export async function getAllPokemon(url) {\n//   return new Promise((resolve, reject) => {\n//       fetch(url).then(res => res.json())\n//           .then(data => {\n//               resolve(data)\n//           })\n//   });\n// }\n// const HomePage = () => {\n//   const [pokemonData, setPokemonData] = useState([])\n//   const [nextUrl, setNextUrl] = useState('');\n//   const [prevUrl, setPrevUrl] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const initialURL = 'https://pokeapi.co/api/v2/pokemon'\n\n//   useEffect(() => {\n//     async function fetchData() {\n//       let response = await getAllPokemon(initialURL)\n//       setNextUrl(response.next);\n//       setPrevUrl(response.previous);\n//       await loadPokemon(response.results);\n//       setLoading(false);\n//     }\n//     fetchData();\n//   }, [])\n\n//   const next = async () => {\n//     setLoading(true);\n//     let data = await getAllPokemon(nextUrl);\n//     await loadPokemon(data.results);\n//     setNextUrl(data.next);\n//     setPrevUrl(data.previous);\n//     setLoading(false);\n//   }\n\n//   const prev = async () => {\n//     if (!prevUrl) return;\n//     setLoading(true);\n//     let data = await getAllPokemon(prevUrl);\n//     await loadPokemon(data.results);\n//     setNextUrl(data.next);\n//     setPrevUrl(data.previous);\n//     setLoading(false);\n//   }\n\n//   const loadPokemon = async (data) => {\n//     let _pokemonData = await Promise.all(data.map(async pokemon => {\n//       let pokemonRecord = await getPokemon(pokemon)\n//       return pokemonRecord\n//     }))\n//     setPokemonData(_pokemonData);\n//   }\n\n// //   return (\n// //     <>\n// //       <Navbar />\n// //       <div>\n// //         {loading ? <h1 style={{ textAlign: 'center' }}>Loading...</h1> : (\n// //           <>\n// //             <div className=\"btn\">\n// //               <button onClick={prev}>Prev</button>\n// //               <button onClick={next}>Next</button>\n// //             </div>\n// //             <div className=\"grid-container\">\n// //               {pokemonData.map((pokemon, i) => {\n// //                 return <Card key={i} pokemon={pokemon} />\n// //               })}\n// //             </div>\n// //             <div className=\"btn\">\n// //               <button onClick={prev}>Prev</button>\n// //               <button onClick={next}>Next</button>\n// //             </div>\n// //           </>\n// //         )}\n// //       </div>\n// //     </>\n// //   );\n// // }\n\n// return (\n//   <Container>\n//     {/* {isLoading && <ThreeDots color=\"#eead71\" height={60} width={60} />} */}\n//     <Section>      \n//       {/* {swipeMovies.length !== 0 && (\n//         <>\n//           <Title>Upcoming</Title>\n//           <Slider movies={swipeMovies}/>\n//         </>)} */}\n//       {pokemonData.length !== 0 &&(\n//         <>\n//           {pokemonData.map((pokemon, i) => {\n//                 return <div key={i} pokemon={pokemon}>{pokemon}</div>\n//               })}\n//         </>)}\n//       {/* {!isLoading && movies.length >= 20 && \n//         <Button onClick={handleLoadMore} icon={<TiArrowSync/>}>\n//           Load more\n//         </Button>} */}\n//     </Section>\n//   </Container>\n//   );\n// };\n\nimport { PokemonGallery } from \"components/PokemonGallery\";\nimport { useState, useEffect } from \"react\";\nimport { getPokemons, getPokemonData } from \"api\";\n\nconst HomePage = () => {\nconst [allPokemons, setAllPokemons] = useState([]);\n// const [loadMore, setLoadMore] = useState('https://pokeapi.co/api/v2/pokemon?limit=10');\n\n\n\nuseEffect(() => {\n  (async () => {\n    const {data} = await getPokemons(10,0);\n    //  setLoadMore(data.next);\n      const promises = data.results.map(async (pokemon) => {\n        return await getPokemonData(pokemon.name)\n      })\n      const results = await Promise.all(promises);\n     setAllPokemons(prev => [...prev, ...results]);\n  })()\n },[])\n\n return (\n  \n        <div>\n          {<PokemonGallery pokemons={allPokemons}/>}\n         \n        <button type=\"button\">Load more</button>\n      \n    </div>\n      );\n    };\nexport default HomePage;"],"names":["colorTypes","bug","dragon","fairy","fire","ghost","ground","normal","pyschic","steel","dark","electric","fighting","flying","grass","ice","poison","rock","water","CardWrapper","styled","p","theme","radii","space","type","colors","accent","Avatar","PokemonTitle","white","fontWeights","bold","fontSizes","l","PokemonType","semibold","m","PokemonCard","id","name","image","src","alt","PokemonList","Item","small","PokemonGallery","pokemons","location","useLocation","map","pokemon","index","to","state","from","sprites","other","dream_world","front_default","types","customAxios","axios","baseURL","getPokemonData","url","data","console","log","toast","getPokemons","limit","offset","useState","allPokemons","setAllPokemons","useEffect","promises","results","Promise","all","prev"],"sourceRoot":""}